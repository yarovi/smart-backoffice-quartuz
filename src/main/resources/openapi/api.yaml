openapi: 3.0.4
info:
  title: OpenAPI Example
  version: 1.0.0
  description: An example OpenAPI specification

paths:
  /categories:
    get:
      tags:
        - Categories
      operationId: getCategories
      responses:
        200:
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        201:
          $ref: '#/components/responses/201'
  /categories/{categoryId}:
    parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: number
    put:
      tags:
        - Categories
      operationId: updateCategory
      requestBody:
        description: Update a category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: Category updated successfully
    delete:
      operationId: deleteCategory
      responses:
        200:
          description: Category deleted successfully
    get:
      operationId: getCategoryById
      responses:
        200:
          description: Category details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /articles:
    get:
      tags:
        - Articles
      operationId: getArticles
      responses:
        200:
          description: A list of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      tags:
        - Articles
      operationId: createArticle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        201:
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
  /articles/{articleId}:
    parameters:
      - name: articleId
        in: path
        required: true
        schema:
          type: number
    put:
      tags:
        - Articles
      operationId: updateArticle
      requestBody:
        description: Update an article
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        200:
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      operationId: deleteArticle
      responses:
        200:
          description: Article deleted successfully
    get:
      operationId: getArticleById
      responses:
        200:
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
  /tables:
    get:
      tags:
        - Tables
      operationId: getTables
      responses:
        200:
          description: A list of tables
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/apiTable'
    post:
        tags:
          - Tables
        operationId: createTable
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTable'
        responses:
          201:
            description: Table created successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/apiTable'

  /tables/{tableId}:
    parameters:
      - name: tableId
        in: path
        required: true
        schema:
          type: number
    put:
      tags:
        - Tables
      operationId: updateTable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiTable'
      responses:
        200:
          description: Table updated successfully
    delete:
      tags:
        - Tables
      operationId: deleteTable
      responses:
        200:
          description: Table deleted successfully
    get:
      tags:
        - Tables
      operationId: getTableById
      responses:
        200:
          description: Table details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTable'

components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        picture:
          type: string
    Article:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        description:
          type: string
        picture:
          type: string
    apiTable:
      type: object
      properties:
        name:
          type: string
        seatCount:
          type: integer
        active:
          type: boolean
  responses:
    201:
      description: Category created successfully
      headers:
        Location:
          description: The URL of the created resource
          schema:
            type: string
